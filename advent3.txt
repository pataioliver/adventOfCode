using System.Text.RegularExpressions;

namespace advent3
{
    internal class Program
    {
        static void Main()
        {
            string filePath = "advent3.txt";
            secondTask(filePath);

            Console.ReadKey();
        }
        static void firstTask(string filePath)
        {
            int totalSum = 0;

            try
            {
                using (StreamReader reader = new StreamReader(filePath))
                {
                    string corruptedMemory = reader.ReadToEnd();

                    string firstTaskPattern = @"mul\((\d{1,3}),(\d{1,3})\)";

                    MatchCollection matches = Regex.Matches(corruptedMemory, firstTaskPattern);

                    foreach (Match match in matches)
                    {
                        int x = int.Parse(match.Groups[1].Value);
                        int y = int.Parse(match.Groups[2].Value);

                        totalSum += x * y;
                    }

                    ConsoleColor defaultColor = Console.ForegroundColor;

                    int lastIndex = 0;

                    foreach (Match match in Regex.Matches(corruptedMemory, firstTaskPattern))
                    {
                        Console.ForegroundColor = defaultColor;
                        Console.Write(corruptedMemory.Substring(lastIndex, match.Index - lastIndex));

                        Console.ForegroundColor = ConsoleColor.Red;
                        Console.Write(match.Value);
                        lastIndex = match.Index + match.Length;
                    }
                    Console.ForegroundColor = defaultColor;
                    Console.Write(corruptedMemory.Substring(lastIndex));

                    Console.ResetColor();
                    Console.ForegroundColor = ConsoleColor.Cyan;
                    Console.WriteLine("");
                    Console.WriteLine("+--------------------------------------------+");
                    Console.WriteLine("| Total Sum of Multiplications: " + totalSum.ToString().PadLeft(12) + " |");
                    Console.WriteLine("+--------------------------------------------+");
                    Console.WriteLine("");
                    Console.ResetColor();
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine("An error occurred: " + ex.Message);
            }
        }
        static void secondTask(string filePath)
        {
            int totalSum = 0;

            try
            {
                using (StreamReader reader = new StreamReader(filePath))
                {
                    string corruptedMemory = reader.ReadToEnd();
                    string secondTaskPattern = @"mul\(\d{1,3},\d{1,3}\)|do\(\)|don\'t\(\)";
                    bool doCount = true;
                    bool doNotCount = false;

                    Regex regex = new Regex(secondTaskPattern);
                    Match match = regex.Match(corruptedMemory);

                    while (match.Success)
                    {


                        if (match.Groups[1].Success && match.Groups[2].Success)
                        {
                            int x = int.Parse(match.Groups[1].Value);
                            int y = int.Parse(match.Groups[2].Value);

                            totalSum += x * y;
                            Console.WriteLine($"mul() group 1: {match.Groups[1].Value}, group 2: {match.Groups[2].Value}");
                        }

                        else if (match.Value == "do()")
                        {

                            Console.WriteLine("Matched: do()");
                        }

                        else if (match.Value == "don't()")
                        {
                            Console.WriteLine("Matched: don't()");
                        }
                        else { Console.WriteLine(match.Value); }

                        match = match.NextMatch();
                    }
                    /*ConsoleColor defaultColor = Console.ForegroundColor;

                    int lastIndex = 0;

                    foreach (Match match in Regex.Matches(corruptedMemory, secondTaskPattern))
                    {
                        Console.ForegroundColor = defaultColor;
                        Console.Write(corruptedMemory.Substring(lastIndex, match.Index - lastIndex));

                        Console.ForegroundColor = ConsoleColor.Red;
                        Console.Write(match.Value);
                        lastIndex = match.Index + match.Length;
                    }

                    Console.ForegroundColor = defaultColor;*/

                    Console.ResetColor();
                    Console.ForegroundColor = ConsoleColor.Cyan;
                    Console.WriteLine("");
                    Console.WriteLine("+--------------------------------------------+");
                    Console.WriteLine("| Total Sum of Multiplications: " + totalSum.ToString().PadLeft(12) + " |");
                    Console.WriteLine("+--------------------------------------------+");
                    Console.WriteLine("");
                    Console.ResetColor();
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine("An error occurred: " + ex.Message);
            }
        }
    }
}
